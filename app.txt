import streamlit as st
import matplotlib.pyplot as plt
import preprocessor, helper
import seaborn as sns

st.sidebar.title("Whatsapp Chat Analyzer")

uploaded_file = st.sidebar.file_uploader("Choose a file")
if uploaded_file is not None:
    # To read file as bytes:
    bytes_data = uploaded_file.getvalue()
    #currently the file is in the byte stream to convert it into the byte string

    data = bytes_data.decode("utf-8")
    #st.text(data)

    df = preprocessor.preprocess(data)

    #st.dataframe(df) #to display the data frame(initial)

    # now we will have the all the data in the form of the dataframes

    #fetching unique users

    user_list = df['user'].unique().tolist()
    user_list.remove('group_notification')
    user_list.sort()
    user_list.insert(0,"Overall")

    selected_user = st.sidebar.selectbox("Show analysis wrt ",user_list)

    if st.sidebar.button("Show Analysis "):
        #pass

        num_messages , words , num_of_media_messages ,num_links= helper.fetch_stats(selected_user,df)    #call the function

        #we will create 4 columns
        st.title("Top Statisics")

        col1 , col2 , col3 , col4 = st.columns(4)


        with col1:
            st.header("Total messages")
            st.title(num_messages)

        with col2:
            st.header("Total words")
            st.title(words)

        with col3:
            st.header("Media shared")
            st.title(num_of_media_messages)

        with col4:
            st.header("Links shared")
            st.title(num_links)

        # monthly timeline
        st.title("Monthly TimeLine")

        timeline = helper.monthly_timeline(selected_user,df)
        fig,ax=plt.subplots()
        ax.plot(timeline['time'], timeline['message'] , color = 'green')  # on x axis we have time and y axis we have messages
        plt.xticks(rotation='vertical')
        st.pyplot(fig)

        #daily timeline
        # st.title("Daily TimeLine")
        #
        # daily_timeline = helper.daily_timeline(selected_user, df)
        # fig, ax = plt.subplots()
        # ax.plot(daily_timeline['each_day'],daily_timeline['message'],
        #         color='black')  # on x axis we have time and y axis we have messages
        # plt.xticks(rotation='vertical')
        # st.pyplot(fig)


        #activity map
        st.title("Activity Map")

        col1 , col2 =st.columns(2)

        with col1:
            st.header("Most busy day")
            busy_day=helper.week_activity_map(selected_user,df)

            fig,ax =plt.subplots()
            ax.bar(busy_day.index,busy_day.values)
            plt.xticks(rotation='vertical')

            st.pyplot(fig)

        with col2:
            st.header("Most busy month")
            busy_month = helper.month_activity_map(selected_user, df)

            fig, ax = plt.subplots()
            ax.bar(busy_month.index, busy_month.values,color = 'orange')
            plt.xticks(rotation='vertical')
            st.pyplot(fig)

        # drawing the heatmap
        st.title("Weekly activity map")
        user_heatmap = helper.activity_heatmap(selected_user,df)
        fig,ax=plt.subplots()
        ax = sns.heatmap(user_heatmap)
        st.pyplot(fig)

        #finding the busiest user in the group(Group Level)

        if selected_user == 'Overall':

            st.title('Most Busy Users ')
            x , new_df = helper.most_busy_users(df)
            fig , ax = plt.subplots()

            col1, col2 = st.columns(2)

            with col1:
                ax.bar(x.index, x.values, color = 'red')
                plt.xticks(rotation = 'vertical')

                st.pyplot(fig)

            with col2:
                st.dataframe(new_df)


        #word cloud
        st.title("Word Cloud")
        df_wc = helper.create_wordcloud(selected_user,df)

        fig,ax = plt.subplots()
        ax.imshow(df_wc)    #to show the image
        st.pyplot(fig)


        # most common words

        most_common_df = helper.most_common_words(selected_user,df)

        fig, ax = plt.subplots()
        ax.barh(most_common_df[0], most_common_df[1])  # ax.bar(x - axis , y- axis) barh is for the horizontal bar
        plt.xticks(rotation = 'vertical')

        st.title("Most Common Words")

        st.pyplot(fig)

        #st.dataframe(most_common_df) # if we have to print it in dataFrame


        #emojis analysis

        emoji_df = helper.emoji_helper(selected_user,df)

        st.title("Emoji Analysis ")

        col1, col2= st.columns(2)

        with col1:
            st.dataframe(emoji_df)

        with col2:
            fig,ax = plt.subplots()
            #ax.pie(emoji_df[1],labels=emoji_df[0]) #we pass the lebel in the parameters

            #if we have to display the top 5 then
            ax.pie(emoji_df[1].head(), labels=emoji_df[0].head(),autopct="%0.2f") #autopct is used for the percentage
            st.pyplot(fig)
        #st.dataframe(emoji_df) to display the data frame

        # with col3:
        #     ax.bar(emoji_df[1],emoji_df[0])
        #     plt.xticks(rotation='vertical')
        #
        #     st.pyplot(fig)
